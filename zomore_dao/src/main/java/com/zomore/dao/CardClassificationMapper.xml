<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zomore.dao.CardClassificationMapper">
  <resultMap id="BaseResultMap" type="com.zomore.domain.CardClassification">
    <id column="classificationId" jdbcType="BIGINT" property="classificationid" />
    <result column="classificationName" jdbcType="VARCHAR" property="classificationname" />
    <result column="classificationRemark" jdbcType="VARCHAR" property="classificationremark" />
    <result column="shop" jdbcType="VARCHAR" property="shop" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    classificationId, classificationName, classificationRemark, shop
  </sql>
  <select id="selectByExample" parameterType="com.zomore.domain.CardClassificationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from card_classification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from card_classification
    where classificationId = #{classificationid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from card_classification
    where classificationId = #{classificationid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zomore.domain.CardClassificationExample">
    delete from card_classification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zomore.domain.CardClassification">
    insert into card_classification (classificationId, classificationName, 
      classificationRemark, shop)
    values (#{classificationid,jdbcType=BIGINT}, #{classificationname,jdbcType=VARCHAR}, 
      #{classificationremark,jdbcType=VARCHAR}, #{shop,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zomore.domain.CardClassification">
    insert into card_classification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="classificationid != null">
        classificationId,
      </if>
      <if test="classificationname != null">
        classificationName,
      </if>
      <if test="classificationremark != null">
        classificationRemark,
      </if>
      <if test="shop != null">
        shop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="classificationid != null">
        #{classificationid,jdbcType=BIGINT},
      </if>
      <if test="classificationname != null">
        #{classificationname,jdbcType=VARCHAR},
      </if>
      <if test="classificationremark != null">
        #{classificationremark,jdbcType=VARCHAR},
      </if>
      <if test="shop != null">
        #{shop,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zomore.domain.CardClassificationExample" resultType="java.lang.Long">
    select count(*) from card_classification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update card_classification
    <set>
      <if test="record.classificationid != null">
        classificationId = #{record.classificationid,jdbcType=BIGINT},
      </if>
      <if test="record.classificationname != null">
        classificationName = #{record.classificationname,jdbcType=VARCHAR},
      </if>
      <if test="record.classificationremark != null">
        classificationRemark = #{record.classificationremark,jdbcType=VARCHAR},
      </if>
      <if test="record.shop != null">
        shop = #{record.shop,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update card_classification
    set classificationId = #{record.classificationid,jdbcType=BIGINT},
      classificationName = #{record.classificationname,jdbcType=VARCHAR},
      classificationRemark = #{record.classificationremark,jdbcType=VARCHAR},
      shop = #{record.shop,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zomore.domain.CardClassification">
    update card_classification
    <set>
      <if test="classificationname != null">
        classificationName = #{classificationname,jdbcType=VARCHAR},
      </if>
      <if test="classificationremark != null">
        classificationRemark = #{classificationremark,jdbcType=VARCHAR},
      </if>
      <if test="shop != null">
        shop = #{shop,jdbcType=VARCHAR},
      </if>
    </set>
    where classificationId = #{classificationid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zomore.domain.CardClassification">
    update card_classification
    set classificationName = #{classificationname,jdbcType=VARCHAR},
      classificationRemark = #{classificationremark,jdbcType=VARCHAR},
      shop = #{shop,jdbcType=VARCHAR}
    where classificationId = #{classificationid,jdbcType=BIGINT}
  </update>
</mapper>