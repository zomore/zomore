<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zomore.dao.CardSchemeMapper">
  <resultMap id="BaseResultMap" type="com.zomore.domain.CardScheme">
    <id column="schemeId" jdbcType="VARCHAR" property="schemeid" />
    <result column="cardName" jdbcType="VARCHAR" property="cardname" />
    <result column="cardType" jdbcType="VARCHAR" property="cardtype" />
    <result column="servicelife" jdbcType="VARCHAR" property="servicelife" />
    <result column="shopName" jdbcType="VARCHAR" property="shopname" />
    <result column="saleMoney" jdbcType="VARCHAR" property="salemoney" />
    <result column="useNum" jdbcType="VARCHAR" property="usenum" />
    <result column="effectivedays" jdbcType="VARCHAR" property="effectivedays" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="dueTime" jdbcType="TIMESTAMP" property="duetime" />
    <result column="commodityId" jdbcType="VARCHAR" property="commodityid" />
    <result column="commoditynum" jdbcType="INTEGER" property="commoditynum" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="ticheng" jdbcType="VARCHAR" property="ticheng" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    schemeId, cardName, cardType, servicelife, shopName, saleMoney, useNum, effectivedays, 
    createTime, dueTime, commodityId, commoditynum, remark, status, ticheng
  </sql>
  <select id="selectByExample" parameterType="com.zomore.domain.CardSchemeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from card_scheme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from card_scheme
    where schemeId = #{schemeid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from card_scheme
    where schemeId = #{schemeid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zomore.domain.CardSchemeExample">
    delete from card_scheme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zomore.domain.CardScheme">
    insert into card_scheme (schemeId, cardName, cardType, 
      servicelife, shopName, saleMoney, 
      useNum, effectivedays, createTime, 
      dueTime, commodityId, commoditynum, 
      remark, status, ticheng
      )
    values (#{schemeid,jdbcType=VARCHAR}, #{cardname,jdbcType=VARCHAR}, #{cardtype,jdbcType=VARCHAR}, 
      #{servicelife,jdbcType=VARCHAR}, #{shopname,jdbcType=VARCHAR}, #{salemoney,jdbcType=VARCHAR}, 
      #{usenum,jdbcType=VARCHAR}, #{effectivedays,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{duetime,jdbcType=TIMESTAMP}, #{commodityid,jdbcType=VARCHAR}, #{commoditynum,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{ticheng,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zomore.domain.CardScheme">
    insert into card_scheme
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schemeid != null">
        schemeId,
      </if>
      <if test="cardname != null">
        cardName,
      </if>
      <if test="cardtype != null">
        cardType,
      </if>
      <if test="servicelife != null">
        servicelife,
      </if>
      <if test="shopname != null">
        shopName,
      </if>
      <if test="salemoney != null">
        saleMoney,
      </if>
      <if test="usenum != null">
        useNum,
      </if>
      <if test="effectivedays != null">
        effectivedays,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="duetime != null">
        dueTime,
      </if>
      <if test="commodityid != null">
        commodityId,
      </if>
      <if test="commoditynum != null">
        commoditynum,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="ticheng != null">
        ticheng,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schemeid != null">
        #{schemeid,jdbcType=VARCHAR},
      </if>
      <if test="cardname != null">
        #{cardname,jdbcType=VARCHAR},
      </if>
      <if test="cardtype != null">
        #{cardtype,jdbcType=VARCHAR},
      </if>
      <if test="servicelife != null">
        #{servicelife,jdbcType=VARCHAR},
      </if>
      <if test="shopname != null">
        #{shopname,jdbcType=VARCHAR},
      </if>
      <if test="salemoney != null">
        #{salemoney,jdbcType=VARCHAR},
      </if>
      <if test="usenum != null">
        #{usenum,jdbcType=VARCHAR},
      </if>
      <if test="effectivedays != null">
        #{effectivedays,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="duetime != null">
        #{duetime,jdbcType=TIMESTAMP},
      </if>
      <if test="commodityid != null">
        #{commodityid,jdbcType=VARCHAR},
      </if>
      <if test="commoditynum != null">
        #{commoditynum,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="ticheng != null">
        #{ticheng,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zomore.domain.CardSchemeExample" resultType="java.lang.Long">
    select count(*) from card_scheme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update card_scheme
    <set>
      <if test="record.schemeid != null">
        schemeId = #{record.schemeid,jdbcType=VARCHAR},
      </if>
      <if test="record.cardname != null">
        cardName = #{record.cardname,jdbcType=VARCHAR},
      </if>
      <if test="record.cardtype != null">
        cardType = #{record.cardtype,jdbcType=VARCHAR},
      </if>
      <if test="record.servicelife != null">
        servicelife = #{record.servicelife,jdbcType=VARCHAR},
      </if>
      <if test="record.shopname != null">
        shopName = #{record.shopname,jdbcType=VARCHAR},
      </if>
      <if test="record.salemoney != null">
        saleMoney = #{record.salemoney,jdbcType=VARCHAR},
      </if>
      <if test="record.usenum != null">
        useNum = #{record.usenum,jdbcType=VARCHAR},
      </if>
      <if test="record.effectivedays != null">
        effectivedays = #{record.effectivedays,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.duetime != null">
        dueTime = #{record.duetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commodityid != null">
        commodityId = #{record.commodityid,jdbcType=VARCHAR},
      </if>
      <if test="record.commoditynum != null">
        commoditynum = #{record.commoditynum,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.ticheng != null">
        ticheng = #{record.ticheng,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update card_scheme
    set schemeId = #{record.schemeid,jdbcType=VARCHAR},
      cardName = #{record.cardname,jdbcType=VARCHAR},
      cardType = #{record.cardtype,jdbcType=VARCHAR},
      servicelife = #{record.servicelife,jdbcType=VARCHAR},
      shopName = #{record.shopname,jdbcType=VARCHAR},
      saleMoney = #{record.salemoney,jdbcType=VARCHAR},
      useNum = #{record.usenum,jdbcType=VARCHAR},
      effectivedays = #{record.effectivedays,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      dueTime = #{record.duetime,jdbcType=TIMESTAMP},
      commodityId = #{record.commodityid,jdbcType=VARCHAR},
      commoditynum = #{record.commoditynum,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      ticheng = #{record.ticheng,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zomore.domain.CardScheme">
    update card_scheme
    <set>
      <if test="cardname != null">
        cardName = #{cardname,jdbcType=VARCHAR},
      </if>
      <if test="cardtype != null">
        cardType = #{cardtype,jdbcType=VARCHAR},
      </if>
      <if test="servicelife != null">
        servicelife = #{servicelife,jdbcType=VARCHAR},
      </if>
      <if test="shopname != null">
        shopName = #{shopname,jdbcType=VARCHAR},
      </if>
      <if test="salemoney != null">
        saleMoney = #{salemoney,jdbcType=VARCHAR},
      </if>
      <if test="usenum != null">
        useNum = #{usenum,jdbcType=VARCHAR},
      </if>
      <if test="effectivedays != null">
        effectivedays = #{effectivedays,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="duetime != null">
        dueTime = #{duetime,jdbcType=TIMESTAMP},
      </if>
      <if test="commodityid != null">
        commodityId = #{commodityid,jdbcType=VARCHAR},
      </if>
      <if test="commoditynum != null">
        commoditynum = #{commoditynum,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="ticheng != null">
        ticheng = #{ticheng,jdbcType=VARCHAR},
      </if>
    </set>
    where schemeId = #{schemeid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zomore.domain.CardScheme">
    update card_scheme
    set cardName = #{cardname,jdbcType=VARCHAR},
      cardType = #{cardtype,jdbcType=VARCHAR},
      servicelife = #{servicelife,jdbcType=VARCHAR},
      shopName = #{shopname,jdbcType=VARCHAR},
      saleMoney = #{salemoney,jdbcType=VARCHAR},
      useNum = #{usenum,jdbcType=VARCHAR},
      effectivedays = #{effectivedays,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      dueTime = #{duetime,jdbcType=TIMESTAMP},
      commodityId = #{commodityid,jdbcType=VARCHAR},
      commoditynum = #{commoditynum,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      ticheng = #{ticheng,jdbcType=VARCHAR}
    where schemeId = #{schemeid,jdbcType=VARCHAR}
  </update>
</mapper>