<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zomore.dao.ConponMapper">
  <resultMap id="BaseResultMap" type="com.zomore.domain.Conpon">
    <result column="conponId" jdbcType="VARCHAR" property="conponId" />
    <result column="createShop" jdbcType="VARCHAR" property="createShop" />
    <result column="conponType" jdbcType="INTEGER" property="conponType" />
    <result column="conponNewScope" jdbcType="VARCHAR" property="conponNewScope" />
    <result column="createTime" jdbcType="VARCHAR" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="useSituation" jdbcType="VARCHAR" property="useSituation" />
    <result column="shopId" jdbcType="VARCHAR" property="shopId" />
    <result column="multipleId" jdbcType="VARCHAR" property="multipleId" />
    <result column="dueTime" jdbcType="VARCHAR" property="duetime" />
    <result column="conponName" jdbcType="VARCHAR" property="conponName" />
    <result column="Manufactured" jdbcType="VARCHAR" property="manufactured" />
    <result column="issued" jdbcType="VARCHAR" property="issued" />
    <result column="used" jdbcType="VARCHAR" property="used" />
    <result column="useStores" jdbcType="VARCHAR" property="useStores" />
    <result column="superposition" jdbcType="VARCHAR" property="superposition" />
    <result column="money" jdbcType="VARCHAR" property="money" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    conponId, createShop, conponType, conponNewScope, createTime, status, useSituation, 
    shopId, multipleId, dueTime, conponName, Manufactured, issued, used, useStores, superposition, 
    money
  </sql>
  <select id="selectByExample" parameterType="com.zomore.domain.ConponExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from conpon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zomore.domain.ConponExample">
    delete from conpon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zomore.domain.Conpon">
    insert into conpon (conponId, createShop, conponType, 
      conponNewScope, createTime, status, 
      useSituation, shopId, multipleId, 
      dueTime, conponName, Manufactured, 
      issued, used, useStores, 
      superposition, money)
    values (#{conponid,jdbcType=VARCHAR}, #{createshop,jdbcType=VARCHAR}, #{conpontype,jdbcType=INTEGER}, 
      #{conponnewscope,jdbcType=VARCHAR}, #{createtime,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{usesituation,jdbcType=VARCHAR}, #{shopid,jdbcType=VARCHAR}, #{multipleid,jdbcType=VARCHAR}, 
      #{duetime,jdbcType=VARCHAR}, #{conponname,jdbcType=VARCHAR}, #{manufactured,jdbcType=VARCHAR}, 
      #{issued,jdbcType=VARCHAR}, #{used,jdbcType=VARCHAR}, #{usestores,jdbcType=VARCHAR}, 
      #{superposition,jdbcType=VARCHAR}, #{money,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zomore.domain.Conpon">
    insert into conpon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="conponid != null">
        conponId,
      </if>
      <if test="createshop != null">
        createShop,
      </if>
      <if test="conpontype != null">
        conponType,
      </if>
      <if test="conponnewscope != null">
        conponNewScope,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="usesituation != null">
        useSituation,
      </if>
      <if test="shopid != null">
        shopId,
      </if>
      <if test="multipleid != null">
        multipleId,
      </if>
      <if test="duetime != null">
        dueTime,
      </if>
      <if test="conponname != null">
        conponName,
      </if>
      <if test="manufactured != null">
        Manufactured,
      </if>
      <if test="issued != null">
        issued,
      </if>
      <if test="used != null">
        used,
      </if>
      <if test="usestores != null">
        useStores,
      </if>
      <if test="superposition != null">
        superposition,
      </if>
      <if test="money != null">
        money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="conponid != null">
        #{conponid,jdbcType=VARCHAR},
      </if>
      <if test="createshop != null">
        #{createshop,jdbcType=VARCHAR},
      </if>
      <if test="conpontype != null">
        #{conpontype,jdbcType=INTEGER},
      </if>
      <if test="conponnewscope != null">
        #{conponnewscope,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="usesituation != null">
        #{usesituation,jdbcType=VARCHAR},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=VARCHAR},
      </if>
      <if test="multipleid != null">
        #{multipleid,jdbcType=VARCHAR},
      </if>
      <if test="duetime != null">
        #{duetime,jdbcType=VARCHAR},
      </if>
      <if test="conponname != null">
        #{conponname,jdbcType=VARCHAR},
      </if>
      <if test="manufactured != null">
        #{manufactured,jdbcType=VARCHAR},
      </if>
      <if test="issued != null">
        #{issued,jdbcType=VARCHAR},
      </if>
      <if test="used != null">
        #{used,jdbcType=VARCHAR},
      </if>
      <if test="usestores != null">
        #{usestores,jdbcType=VARCHAR},
      </if>
      <if test="superposition != null">
        #{superposition,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zomore.domain.ConponExample" resultType="java.lang.Long">
    select count(*) from conpon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update conpon
    <set>
      <if test="record.conponid != null">
        conponId = #{record.conponid,jdbcType=VARCHAR},
      </if>
      <if test="record.createshop != null">
        createShop = #{record.createshop,jdbcType=VARCHAR},
      </if>
      <if test="record.conpontype != null">
        conponType = #{record.conpontype,jdbcType=INTEGER},
      </if>
      <if test="record.conponnewscope != null">
        conponNewScope = #{record.conponnewscope,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.usesituation != null">
        useSituation = #{record.usesituation,jdbcType=VARCHAR},
      </if>
      <if test="record.shopid != null">
        shopId = #{record.shopid,jdbcType=VARCHAR},
      </if>
      <if test="record.multipleid != null">
        multipleId = #{record.multipleid,jdbcType=VARCHAR},
      </if>
      <if test="record.duetime != null">
        dueTime = #{record.duetime,jdbcType=VARCHAR},
      </if>
      <if test="record.conponname != null">
        conponName = #{record.conponname,jdbcType=VARCHAR},
      </if>
      <if test="record.manufactured != null">
        Manufactured = #{record.manufactured,jdbcType=VARCHAR},
      </if>
      <if test="record.issued != null">
        issued = #{record.issued,jdbcType=VARCHAR},
      </if>
      <if test="record.used != null">
        used = #{record.used,jdbcType=VARCHAR},
      </if>
      <if test="record.usestores != null">
        useStores = #{record.usestores,jdbcType=VARCHAR},
      </if>
      <if test="record.superposition != null">
        superposition = #{record.superposition,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update conpon
    set conponId = #{record.conponid,jdbcType=VARCHAR},
      createShop = #{record.createshop,jdbcType=VARCHAR},
      conponType = #{record.conpontype,jdbcType=INTEGER},
      conponNewScope = #{record.conponnewscope,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      useSituation = #{record.usesituation,jdbcType=VARCHAR},
      shopId = #{record.shopid,jdbcType=VARCHAR},
      multipleId = #{record.multipleid,jdbcType=VARCHAR},
      dueTime = #{record.duetime,jdbcType=VARCHAR},
      conponName = #{record.conponname,jdbcType=VARCHAR},
      Manufactured = #{record.manufactured,jdbcType=VARCHAR},
      issued = #{record.issued,jdbcType=VARCHAR},
      used = #{record.used,jdbcType=VARCHAR},
      useStores = #{record.usestores,jdbcType=VARCHAR},
      superposition = #{record.superposition,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>