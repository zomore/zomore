<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zomore.dao.ZomoreCommodityChangepriceMapper">
  <resultMap id="BaseResultMap" type="com.zomore.domain.ZomoreCommodityChangeprice">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="shop" jdbcType="VARCHAR" property="shop" />
    <result column="employee" jdbcType="VARCHAR" property="employee" />
    <result column="useshop" jdbcType="VARCHAR" property="useshop" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="endtime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zomore.domain.ZomoreCommodityChangeprice">
    <result column="meno" jdbcType="LONGVARCHAR" property="meno" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, shop, employee, useshop, num, updatetime, endtime, status, name
  </sql>
  <sql id="Blob_Column_List">
    meno
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zomore.domain.ZomoreCommodityChangepriceExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zomore_commodity_changeprice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zomore.domain.ZomoreCommodityChangepriceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zomore_commodity_changeprice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zomore_commodity_changeprice
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from zomore_commodity_changeprice
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zomore.domain.ZomoreCommodityChangepriceExample">
    delete from zomore_commodity_changeprice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zomore.domain.ZomoreCommodityChangeprice">
    insert into zomore_commodity_changeprice (id, shop, employee, 
      useshop, num, updatetime, 
      endtime, status, name, 
      meno)
    values (#{id,jdbcType=VARCHAR}, #{shop,jdbcType=VARCHAR}, #{employee,jdbcType=VARCHAR}, 
      #{useshop,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{endtime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{meno,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zomore.domain.ZomoreCommodityChangeprice">
    insert into zomore_commodity_changeprice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shop != null">
        shop,
      </if>
      <if test="employee != null">
        employee,
      </if>
      <if test="useshop != null">
        useshop,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="endtime != null">
        endtime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="meno != null">
        meno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="shop != null">
        #{shop,jdbcType=VARCHAR},
      </if>
      <if test="employee != null">
        #{employee,jdbcType=VARCHAR},
      </if>
      <if test="useshop != null">
        #{useshop,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="meno != null">
        #{meno,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zomore.domain.ZomoreCommodityChangepriceExample" resultType="java.lang.Long">
    select count(*) from zomore_commodity_changeprice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zomore_commodity_changeprice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.shop != null">
        shop = #{record.shop,jdbcType=VARCHAR},
      </if>
      <if test="record.employee != null">
        employee = #{record.employee,jdbcType=VARCHAR},
      </if>
      <if test="record.useshop != null">
        useshop = #{record.useshop,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        endtime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.meno != null">
        meno = #{record.meno,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update zomore_commodity_changeprice
    set id = #{record.id,jdbcType=VARCHAR},
      shop = #{record.shop,jdbcType=VARCHAR},
      employee = #{record.employee,jdbcType=VARCHAR},
      useshop = #{record.useshop,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      endtime = #{record.endtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      meno = #{record.meno,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zomore_commodity_changeprice
    set id = #{record.id,jdbcType=VARCHAR},
      shop = #{record.shop,jdbcType=VARCHAR},
      employee = #{record.employee,jdbcType=VARCHAR},
      useshop = #{record.useshop,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      endtime = #{record.endtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zomore.domain.ZomoreCommodityChangeprice">
    update zomore_commodity_changeprice
    <set>
      <if test="shop != null">
        shop = #{shop,jdbcType=VARCHAR},
      </if>
      <if test="employee != null">
        employee = #{employee,jdbcType=VARCHAR},
      </if>
      <if test="useshop != null">
        useshop = #{useshop,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="meno != null">
        meno = #{meno,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zomore.domain.ZomoreCommodityChangeprice">
    update zomore_commodity_changeprice
    set shop = #{shop,jdbcType=VARCHAR},
      employee = #{employee,jdbcType=VARCHAR},
      useshop = #{useshop,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      meno = #{meno,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zomore.domain.ZomoreCommodityChangeprice">
    update zomore_commodity_changeprice
    set shop = #{shop,jdbcType=VARCHAR},
      employee = #{employee,jdbcType=VARCHAR},
      useshop = #{useshop,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>