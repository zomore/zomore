<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zomore.dao.ZomoreCommodityIntogoodsHistoryMapper">
  <resultMap id="BaseResultMap" type="com.zomore.domain.ZomoreCommodityIntogoodsHistory">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="shop" jdbcType="VARCHAR" property="shop" />
    <result column="people" jdbcType="VARCHAR" property="people" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="str" jdbcType="VARCHAR" property="str" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zomore.domain.ZomoreCommodityIntogoodsHistory">
    <result column="meno" jdbcType="LONGVARCHAR" property="meno" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, time, type, money, shop, people, label, str
  </sql>
  <sql id="Blob_Column_List">
    meno
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zomore.domain.ZomoreCommodityIntogoodsHistoryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zomore_commodity_intogoods_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zomore.domain.ZomoreCommodityIntogoodsHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zomore_commodity_intogoods_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zomore_commodity_intogoods_history
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from zomore_commodity_intogoods_history
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zomore.domain.ZomoreCommodityIntogoodsHistoryExample">
    delete from zomore_commodity_intogoods_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zomore.domain.ZomoreCommodityIntogoodsHistory">
    insert into zomore_commodity_intogoods_history (id, time, type, 
      money, shop, people, 
      label, str, meno
      )
    values (#{id,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{type,jdbcType=VARCHAR}, 
      #{money,jdbcType=DOUBLE}, #{shop,jdbcType=VARCHAR}, #{people,jdbcType=VARCHAR}, 
      #{label,jdbcType=VARCHAR}, #{str,jdbcType=VARCHAR}, #{meno,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zomore.domain.ZomoreCommodityIntogoodsHistory">
    insert into zomore_commodity_intogoods_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="shop != null">
        shop,
      </if>
      <if test="people != null">
        people,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="str != null">
        str,
      </if>
      <if test="meno != null">
        meno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="shop != null">
        #{shop,jdbcType=VARCHAR},
      </if>
      <if test="people != null">
        #{people,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="str != null">
        #{str,jdbcType=VARCHAR},
      </if>
      <if test="meno != null">
        #{meno,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zomore.domain.ZomoreCommodityIntogoodsHistoryExample" resultType="java.lang.Long">
    select count(*) from zomore_commodity_intogoods_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zomore_commodity_intogoods_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.shop != null">
        shop = #{record.shop,jdbcType=VARCHAR},
      </if>
      <if test="record.people != null">
        people = #{record.people,jdbcType=VARCHAR},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.str != null">
        str = #{record.str,jdbcType=VARCHAR},
      </if>
      <if test="record.meno != null">
        meno = #{record.meno,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update zomore_commodity_intogoods_history
    set id = #{record.id,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      shop = #{record.shop,jdbcType=VARCHAR},
      people = #{record.people,jdbcType=VARCHAR},
      label = #{record.label,jdbcType=VARCHAR},
      str = #{record.str,jdbcType=VARCHAR},
      meno = #{record.meno,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zomore_commodity_intogoods_history
    set id = #{record.id,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      shop = #{record.shop,jdbcType=VARCHAR},
      people = #{record.people,jdbcType=VARCHAR},
      label = #{record.label,jdbcType=VARCHAR},
      str = #{record.str,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zomore.domain.ZomoreCommodityIntogoodsHistory">
    update zomore_commodity_intogoods_history
    <set>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="shop != null">
        shop = #{shop,jdbcType=VARCHAR},
      </if>
      <if test="people != null">
        people = #{people,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="str != null">
        str = #{str,jdbcType=VARCHAR},
      </if>
      <if test="meno != null">
        meno = #{meno,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zomore.domain.ZomoreCommodityIntogoodsHistory">
    update zomore_commodity_intogoods_history
    set time = #{time,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      shop = #{shop,jdbcType=VARCHAR},
      people = #{people,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      str = #{str,jdbcType=VARCHAR},
      meno = #{meno,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zomore.domain.ZomoreCommodityIntogoodsHistory">
    update zomore_commodity_intogoods_history
    set time = #{time,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      shop = #{shop,jdbcType=VARCHAR},
      people = #{people,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      str = #{str,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectHistoryIntogoods" parameterType="java.lang.String" resultType="com.zomore.domain.ZomoreCommodityIntogoodsHistory">
    select  id ,time  ,type ,money  , meno  , shop  ,people   ,label , str from zomore_commodity_intogoods_history where shop=#{shop} order by time desc

  </select>

  <select id="selectHistoryIntogoods2" parameterType="java.lang.String" resultType="com.zomore.domain.ZomoreCommodityIntogoodsHistory">
         select  id ,time  ,type ,money  , meno  , shop  ,people   ,label , str from zomore_commodity_intogoods_history  where  id like concat(concat('%',#{intoGoods}),'%')

         and shop=#{shop} order by time desc
  </select>

<select id="selectHistoryIntogoodsDetails" parameterType="java.lang.String" resultType="com.zomore.domain.ZomoreCommodityIntogoods">
        select zomore_commodity_intogoods_id as zomoreCommodityIntogoodsId,zomore_commodity_intogoods_name as zomoreCommodityIntogoodsName,zomore_commodity_intogoods_code as zomoreCommodityIntogoodsCode, zomore_commodity_intogoods_size as zomoreCommodityIntogoodsSize,
         zomore_commodity_intogoods_num as zomoreCommodityIntogoodsNum,zomore_commodity_intogoods_avgprivice as zomoreCommodityIntogoodsAvgprivice, zomore_commodity_intogoods_hightprivice as zomoreCommodityIntogoodsHightprivice, zomore_commodity_intogoods_lowprivice as zomoreCommodityIntogoodsLowprivice,
         zomore_commodity_intogoods_provide as zomoreCommodityIntogoodsProvide, zomore_commodity_intogoods_time as zomoreCommodityIntogoodsTime, shop as shop, people as people,mainid as mainid from zomore_commodity_intogoods where mainid =#{intoGoodsId}
</select>

  <delete id="deleteIntoGoodsById" parameterType="java.lang.String">
    delete from zomore_commodity_intogoods_history where id =#{intoGoodsId}
  </delete>
  <select id="selectAllshopHistoryIntogoods" parameterType="java.util.Map" resultType="com.zomore.domain.ZomoreCommodityIntogoodsHistory">
     select  id ,time  ,type ,money  , meno  , shop  ,people ,label , str
     from zomore_commodity_intogoods_history
     where shop in
     <foreach collection="shoplist" index="index" item="item" open="(" separator="," close=")">
        #{item}
     </foreach>
    <if test="intoGoodsId!=null">
     and id like concat(concat('%',#{intoGoodsId}),'%')
    </if>
      order by time desc
  </select>

</mapper>