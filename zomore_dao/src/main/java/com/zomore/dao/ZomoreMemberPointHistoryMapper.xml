<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zomore.dao.ZomoreMemberPointHistoryMapper">
  <resultMap id="BaseResultMap" type="com.zomore.domain.ZomoreMemberPointHistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="shop" jdbcType="VARCHAR" property="shop" />
    <result column="member_num" jdbcType="VARCHAR" property="memberNum" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="money" jdbcType="DOUBLE" property="money" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zomore.domain.ZomoreMemberPointHistory">
    <result column="meno" jdbcType="LONGVARCHAR" property="meno" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, date, shop, member_num, member_name, type, num, money
  </sql>
  <sql id="Blob_Column_List">
    meno
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zomore.domain.ZomoreMemberPointHistoryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zomore_member_point_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zomore.domain.ZomoreMemberPointHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zomore_member_point_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zomore_member_point_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zomore_member_point_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zomore.domain.ZomoreMemberPointHistoryExample">
    delete from zomore_member_point_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zomore.domain.ZomoreMemberPointHistory">
    insert into zomore_member_point_history (id, date, shop, 
      member_num, member_name, type, 
      num, money, meno
      )
    values (#{id,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP}, #{shop,jdbcType=VARCHAR}, 
      #{memberNum,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{money,jdbcType=DOUBLE}, #{meno,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zomore.domain.ZomoreMemberPointHistory">
    insert into zomore_member_point_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="shop != null">
        shop,
      </if>
      <if test="memberNum != null">
        member_num,
      </if>
      <if test="memberName != null">
        member_name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="meno != null">
        meno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="shop != null">
        #{shop,jdbcType=VARCHAR},
      </if>
      <if test="memberNum != null">
        #{memberNum,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="meno != null">
        #{meno,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zomore.domain.ZomoreMemberPointHistoryExample" resultType="java.lang.Long">
    select count(*) from zomore_member_point_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zomore_member_point_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shop != null">
        shop = #{record.shop,jdbcType=VARCHAR},
      </if>
      <if test="record.memberNum != null">
        member_num = #{record.memberNum,jdbcType=VARCHAR},
      </if>
      <if test="record.memberName != null">
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.meno != null">
        meno = #{record.meno,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update zomore_member_point_history
    set id = #{record.id,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP},
      shop = #{record.shop,jdbcType=VARCHAR},
      member_num = #{record.memberNum,jdbcType=VARCHAR},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DOUBLE},
      meno = #{record.meno,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zomore_member_point_history
    set id = #{record.id,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP},
      shop = #{record.shop,jdbcType=VARCHAR},
      member_num = #{record.memberNum,jdbcType=VARCHAR},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zomore.domain.ZomoreMemberPointHistory">
    update zomore_member_point_history
    <set>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="shop != null">
        shop = #{shop,jdbcType=VARCHAR},
      </if>
      <if test="memberNum != null">
        member_num = #{memberNum,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="meno != null">
        meno = #{meno,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zomore.domain.ZomoreMemberPointHistory">
    update zomore_member_point_history
    set date = #{date,jdbcType=TIMESTAMP},
      shop = #{shop,jdbcType=VARCHAR},
      member_num = #{memberNum,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      money = #{money,jdbcType=DOUBLE},
      meno = #{meno,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zomore.domain.ZomoreMemberPointHistory">
    update zomore_member_point_history
    set date = #{date,jdbcType=TIMESTAMP},
      shop = #{shop,jdbcType=VARCHAR},
      member_num = #{memberNum,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      money = #{money,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>