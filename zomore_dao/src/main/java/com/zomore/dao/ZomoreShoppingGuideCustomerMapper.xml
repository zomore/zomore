<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zomore.dao.ZomoreShoppingGuideCustomerMapper">
  <resultMap id="BaseResultMap" type="com.zomore.domain.ZomoreShoppingGuideCustomer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="num" jdbcType="VARCHAR" property="num" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="allnum" jdbcType="INTEGER" property="allnum" />
    <result column="num1" jdbcType="INTEGER" property="num1" />
    <result column="num2" jdbcType="INTEGER" property="num2" />
    <result column="money1" jdbcType="DOUBLE" property="money1" />
    <result column="money2" jdbcType="DOUBLE" property="money2" />
    <result column="shop" jdbcType="VARCHAR" property="shop" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, num, name, allnum, num1, num2, money1, money2, shop, time
  </sql>
  <select id="selectByExample" parameterType="com.zomore.domain.ZomoreShoppingGuideCustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zomore_shopping_guide_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zomore_shopping_guide_customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zomore_shopping_guide_customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zomore.domain.ZomoreShoppingGuideCustomerExample">
    delete from zomore_shopping_guide_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zomore.domain.ZomoreShoppingGuideCustomer">
    insert into zomore_shopping_guide_customer (id, num, name, 
      allnum, num1, num2, 
      money1, money2, shop, 
      time)
    values (#{id,jdbcType=INTEGER}, #{num,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{allnum,jdbcType=INTEGER}, #{num1,jdbcType=INTEGER}, #{num2,jdbcType=INTEGER}, 
      #{money1,jdbcType=DOUBLE}, #{money2,jdbcType=DOUBLE}, #{shop,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zomore.domain.ZomoreShoppingGuideCustomer">
    insert into zomore_shopping_guide_customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="allnum != null">
        allnum,
      </if>
      <if test="num1 != null">
        num1,
      </if>
      <if test="num2 != null">
        num2,
      </if>
      <if test="money1 != null">
        money1,
      </if>
      <if test="money2 != null">
        money2,
      </if>
      <if test="shop != null">
        shop,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="allnum != null">
        #{allnum,jdbcType=INTEGER},
      </if>
      <if test="num1 != null">
        #{num1,jdbcType=INTEGER},
      </if>
      <if test="num2 != null">
        #{num2,jdbcType=INTEGER},
      </if>
      <if test="money1 != null">
        #{money1,jdbcType=DOUBLE},
      </if>
      <if test="money2 != null">
        #{money2,jdbcType=DOUBLE},
      </if>
      <if test="shop != null">
        #{shop,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zomore.domain.ZomoreShoppingGuideCustomerExample" resultType="java.lang.Long">
    select count(*) from zomore_shopping_guide_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zomore_shopping_guide_customer
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.allnum != null">
        allnum = #{record.allnum,jdbcType=INTEGER},
      </if>
      <if test="record.num1 != null">
        num1 = #{record.num1,jdbcType=INTEGER},
      </if>
      <if test="record.num2 != null">
        num2 = #{record.num2,jdbcType=INTEGER},
      </if>
      <if test="record.money1 != null">
        money1 = #{record.money1,jdbcType=DOUBLE},
      </if>
      <if test="record.money2 != null">
        money2 = #{record.money2,jdbcType=DOUBLE},
      </if>
      <if test="record.shop != null">
        shop = #{record.shop,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zomore_shopping_guide_customer
    set id = #{record.id,jdbcType=INTEGER},
      num = #{record.num,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      allnum = #{record.allnum,jdbcType=INTEGER},
      num1 = #{record.num1,jdbcType=INTEGER},
      num2 = #{record.num2,jdbcType=INTEGER},
      money1 = #{record.money1,jdbcType=DOUBLE},
      money2 = #{record.money2,jdbcType=DOUBLE},
      shop = #{record.shop,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zomore.domain.ZomoreShoppingGuideCustomer">
    update zomore_shopping_guide_customer
    <set>
      <if test="num != null">
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="allnum != null">
        allnum = #{allnum,jdbcType=INTEGER},
      </if>
      <if test="num1 != null">
        num1 = #{num1,jdbcType=INTEGER},
      </if>
      <if test="num2 != null">
        num2 = #{num2,jdbcType=INTEGER},
      </if>
      <if test="money1 != null">
        money1 = #{money1,jdbcType=DOUBLE},
      </if>
      <if test="money2 != null">
        money2 = #{money2,jdbcType=DOUBLE},
      </if>
      <if test="shop != null">
        shop = #{shop,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zomore.domain.ZomoreShoppingGuideCustomer">
    update zomore_shopping_guide_customer
    set num = #{num,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      allnum = #{allnum,jdbcType=INTEGER},
      num1 = #{num1,jdbcType=INTEGER},
      num2 = #{num2,jdbcType=INTEGER},
      money1 = #{money1,jdbcType=DOUBLE},
      money2 = #{money2,jdbcType=DOUBLE},
      shop = #{shop,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>